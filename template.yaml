AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >

  Booking service example app for showing serverless observability

Globals:
  Function:
    Timeout: 3
    Tracing: Active
  Api:
    TracingEnabled: True

Resources:
  BookingTable:
    Type: AWS::Serverless::SimpleTable

  BookingQueue:
    Type: AWS::SQS::Queue

  ReadBookingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: read-booking/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref BookingTable
      Environment:
        Variables:
          BOOKINGS_TABLE: !Ref BookingTable
      Events:
        GetBooking:
          Type: Api
          Properties:
            Path: /booking/{id}
            Method: GET

  CreateBookingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create-booking/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt BookingQueue.QueueName
      Environment:
        Variables:
          BOOKINGS_QUEUE_URL: !Ref BookingQueue
      Events:
        CreateBooking:
          Type: Api
          Properties:
            Path: /booking
            Method: POST

  ProcessOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: process-booking/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Timeout: 30
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BookingTable
      Environment:
        Variables:
          BOOKINGS_TABLE: !Ref BookingTable
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt BookingQueue.Arn
            BatchSize: 10

Outputs:
  BookingApi:
    Description: "Endpoint URL for Prod stage for GET/POST functions"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
